name: Discord Release Notification

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  notify_discord:
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          TITLE=$(echo "${{ github.event.release.name }}" | sed 's/"/\\"/g')
          DESCRIPTION=$(echo "${{ github.event.release.body }}" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          URL="${{ github.event.release.html_url }}"

          JSON_PAYLOAD=$(cat <<EOF
          {
            "embeds": [{
              "title": "${TITLE}",
              "description": "${DESCRIPTION}",
              "url": "${URL}",
              "color": 3066993
            }]
          }
          EOF
          )

          # Validate JSON
          echo $JSON_PAYLOAD | jq . > /dev/null 2>&1
          if [ $? -ne 0 ]; then
            echo "Invalid JSON payload. Exiting."
            exit 1
          fi

          # Send notification
          RESPONSE=$(curl -s -w "\n%{http_code}" -H "Content-Type: application/json" -X POST -d "${JSON_PAYLOAD}" $DISCORD_WEBHOOK)
          HTTP_STATUS=$(echo "$RESPONSE" | tail -n 1)
          BODY=$(echo "$RESPONSE" | sed '$d')

          if [ $HTTP_STATUS -ne 204 ]; then
            echo "Error sending Discord notification. Status code: $HTTP_STATUS"
            echo "Response body: $BODY"
            exit 1
          else
            echo "Discord notification sent successfully."
          fi
